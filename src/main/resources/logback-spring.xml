<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!-- 변수값 설정 -->
    <property name="LOGS_PATH" value="./logs"/><!--로그 쌓일 경로-->
    <property name="LOGS_LEVEL" value="INFO"/><!--.logs 파일 안에 어떤 레벨의 로그들을 저장할지-->

    <!-- Console Appender -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender"><!--콘솔에 출력될 것들-->
        <!-- 출력 패턴 설정 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{HH:mm}] %-5level %logger{36} - %msg%n</pattern>
        </layout>
    </appender>

    <!-- File Appender -->
    <!-- RollingFileAppender는 FileAppender를 상속하여 로그파일을 rollover(타깃파일을 바꾸는 것)한다.
        로그를 작성하다 어느 조건에 다다르면 타깃 파일을 다른 파일로 바꾸는 것-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"><!--파일에 저장할 것들-->
        <!-- 파일명과 경로 설정 -->
        <file>${LOGS_PATH}/log_file.log</file>
        <!-- 출력 패턴 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz, .zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 파일당 최고 용량 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- Error Appender -->
    <appender name = "Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 파일명과 경로 설정 -->
        <file>${LOGS_PATH}/error_file.log</file>
        <!-- 출력 패턴 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz, .zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_error.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- threshold filter 을 넣어서 error 이상의 로그만 걸러지도록 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>



    <root level="${LOGS_LEVEL}">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
    </root>
</configuration>